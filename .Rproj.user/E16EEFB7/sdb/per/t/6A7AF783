{
    "collab_server" : "",
    "contents" : "\n#data frame for plotting\ntoPlotDf <- function(fit){\n    risks <- names(fit)\n    risks <- levels(factor(risks))\n\n    #dealing with factor names of strata\n    badGroupNames <- levels(fit[[1]]$strata)\n    strataMapping <- 1:length(badGroupNames)\n    #ISSUE nazwy grup nie moga mieć w środku '='\n    groups <- sapply(as.character(badGroupNames), function(x) strsplit(x, split = \"=\")[[1]][2])\n    strataMapping <- cbind(strataMapping, groups)\n    colnames(strataMapping) <- c(\"strata\", \"group\")\n\n    toPlot <- c()\n    for(i in risks){\n        tmp <- cbind(fit[[i]]$time,\n                     fit[[i]]$surv,\n                     fit[[i]]$strata,\n                     fit[[i]]$lower,\n                     fit[[i]]$upper,\n                     rep(i, times = length(fit[[i]]$time)))\n\n        tmp <- as.data.frame(tmp)\n        toPlot <- as.data.frame(rbind(toPlot, tmp))\n    }\n\n    colnames(toPlot) <- c(\"time\", \"prob\", \"strata\", \"lowerBound\", \"upperBound\", \"risk\")\n    toPlot <- merge(toPlot, strataMapping, by = \"strata\")\n\n    toPlot$time <- as.numeric(as.character(toPlot$time))\n    toPlot$prob <- as.numeric(as.character(toPlot$prob))\n    toPlot$lowerBound <- as.numeric(as.character(toPlot$lowerBound))\n    toPlot$upperBound <- as.numeric(as.character(toPlot$upperBound))\n    toPlot <- toPlot[, !names(toPlot) %in% \"strata\"]\n\n\n    #adding starting points\n    zeros <- expand.grid(risks, groups)\n    colnames(zeros) <- c(\"risk\", \"group\")\n    zeros$time <- 0\n    zeros$prob <- 1\n    zeros$lowerBound <- 1\n    zeros$upperBound <- 1\n\n    zeros <- zeros[, colnames(toPlot)]\n\n    toPlot <- rbind(toPlot, zeros)\n    toPlot\n}\n\n#########################\n#confidence intervals for simple analysis\nboundsSimpleSurv <- function(ri, gr, target, toPlot){\n    ri <- as.character(ri)\n    gr <- as.character(gr)\n    tmp <- as.data.frame(filter(toPlot, toPlot$risk == ri & toPlot$group == gr))\n    tmp <- tmp[order(tmp$time),]\n    whichTime <- which(tmp$time < target)\n    nr <- length(whichTime)\n    lower <- tmp$lowerBound[nr]\n    upper  <- tmp$upperBound[nr]\n    prob <- tmp$prob[nr]\n    c(lower, prob, upper)\n}\n\n#######################\n\n#barsData for survival curves plotting\nbarsDataSimpleSurv <- function(toPlot, target, risks, groups){\n\n    barsData <- expand.grid(risks, groups)\n\n    low <- c()\n    up <- c()\n    prob <- c()\n    for(i in 1:nrow(barsData)){\n        tmpBounds <- as.numeric(boundsSimpleSurv(barsData[i,1],barsData[i,2],target, toPlot))\n        low <- c(low, tmpBounds[1])\n        prob <- c(prob, tmpBounds[2])\n        up <- c(up, tmpBounds[3])\n        }\n\n    barsData <- cbind(barsData, low, prob, up)\n    colnames(barsData)[1:2] <- c(\"risk\", \"group\")\n    barsData\n\n}\n\n#######################\n\n#' @title Survival curves\n#' @name plotSurvival\n#' @description The function plots survival curves for each risk and group.\n#' @param fit a result of fitSurvival function.\n#' @param target point in time, in which the confidence bounds should be plotted.\n#' @return a ggplot containing n graphs, where n is number of risks. Each graphs represents survival curves for given risk. One curve corresponds to one group.\n#' @export\n#' @examples fitS <- fitSurvival(time = \"time\", risk = \"event\", group = \"gender\", data = LUAD, cens = \"alive\", type = \"kaplan-meier\", conf.int = 0.95, conf.type = \"log\")\n#' plotSurvival(fit = fitS, target = 1200)\n#' @importFrom ggplot2 ggplot\n#' @importFrom dplyr filter\n#' @importFrom scales extended_breaks\n\n\nplotSurvival <- function(fit, target){\n\n    toPlot <- toPlotDf(fit)\n\n    #defining risks\n    risks <- unique(toPlot$risk)\n    risks <- levels(factor(risks))\n\n    #defining groups\n    groups <- unique(toPlot$group)\n    groups <- factor(groups)\n\n\n    barsData <- barsDataSimpleSurv(toPlot, target, risks, groups)\n\n\n    pd <- position_dodge(0.9)\n    #making a plot\n    plot1 <- ggplot(data = toPlot, aes(time, prob, color = group)) +\n        geom_step(size=1) +\n        facet_grid(~risk, scales = \"free\")\n\n    #adding errorbars\n    plot1 <- plot1 +\n        geom_errorbar(data = barsData,\n                      mapping = aes(x = target, ymin = low, ymax = up),\n                      size = 1,\n                      alpha = 0.7,\n                      width = 0.7,\n                      position = pd)\n\n    #making it beauty\n    plot1 <- plot1 +\n        theme_minimal() +\n        ggtitle(\"Survival curves\") +\n        theme(plot.title = element_text(size=13, face=\"bold\", hjust = 0.5), legend.position = \"top\") +\n        scale_y_continuous(\"Probability of survivng up to time t\", limits = c(0,1)) +\n        scale_x_continuous(\"Time\")+\n        theme(legend.title = element_text(size=10, face=\"bold\"))+\n        scale_color_discrete(name=\"Group\", labels = groups)\n\n\n        plot1\n}\n\n",
    "created" : 1499174980584.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3503652288",
    "id" : "6A7AF783",
    "lastKnownWriteTime" : 1499175035,
    "last_content_update" : 1499175035927,
    "path" : "~/GitHub/mgr/kod/package/cr17/R/plotSurvival.R",
    "project_path" : "R/plotSurvival.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}