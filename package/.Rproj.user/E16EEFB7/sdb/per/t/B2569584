{
    "collab_server" : "",
    "contents" : "\n#' @title Regression Models for Competing Risks.\n#' @name compRiskReg\n#' @description Fitting Cox model (Regression model) for competing risks.\n#' @param time name of a column indicating time of an event or follow-up, must be numeric.\n#' @param risk name of a column indicating type of event, can be numeric or factor/character.\n#' @param group name of a column indicating group variable, can be numeric or factor/character.\n#' @param data data.frame, data.table or matrix containing time, risk and group columns.\n#' @param cens value of 'risk' indicating censored observation (default 0).\n#' @return a list of length n, where n is number of different types of events. Each element of a list contains a result of crr function from cmprsk package for given type of event.\n#' @export\n#' @examples fitReg(time = \"time\", risk = \"event\", group = \"gender\", data = LUAD, cens = \"alive\")\n#' @importFrom dplyr filter\n#' @importFrom cmprsk crr\n#' @importFrom gridExtra tableGrob\n\nfitReg <- function(time,\n                   risk,\n                   group,\n                   data,\n                   cens = 0){\n\n    #preparing data\n    data <- as.data.frame(data)\n    timeVec <- data[,time]\n\n\n    gr <- as.matrix(data[,group])\n    cov <- model.matrix(~gr)[,-1]\n\n    risks <- riskVec(data, risk, cens)\n\n    nrOfRisks <- as.numeric(length(risks))\n\n    reg <- lapply(1:nrOfRisks, function(x) {\n               localStatus <- data[,risk]\n               localCode <- risks[x]\n               crr(ftime = timeVec,\n               fstatus = localStatus,\n               cov1 = cov,\n               failcode = localCode)}\n               )\n\n    names(reg) <- risks\n    reg\n}\n\n\n#' @title Regresion models difference testing\n#' @name regTest\n#' @description Testing differences in Competing Risks Regression Models between groups.\n#' @param reg a result of fitReg function.\n#' @param conf.int level of two-sided confidence interval (default 0.95).\n#' @return a data.frame containing p-values of Modified Log-Rank Test for each type of event. The test compares differences between groups in Competing Risks Cox Models.\n#' @export\n#' @examples fitR <- fitReg(time = \"time\", risk = \"event\", group = \"gender\", data = LUAD, cens = \"alive\")\n#' regTest(fitR)\n#' @importFrom dplyr filter\n#' @importFrom cmprsk crr\n#' @importFrom gridExtra tableGrob grid.arrange\n\nregTest <- function(reg, conf.int = 0.95){\n    #counting lrt statistic for each risk\n    #df = nr of groups - 1\n    nrOfRisks <- length(reg)\n    risks <- names(reg)\n\n    stat <- sapply(1:nrOfRisks, function(x){\n         tmp <- summary(reg[[x]], conf.int = conf.int)\n         tmp$logtest\n    })\n\n    p <- sapply(1:nrOfRisks, function(x){\n        pchisq(stat[1,x], stat[2,x], lower.tail = FALSE)\n    })\n\n    p <- round(p, digits = 4)\n\n\n    p <- as.data.frame(t(p))\n\n\n    colnames(p) <- risks\n    rownames(p) <- \"CompRisk LRT\"\n\n    as.data.frame(p)\n\n    }\n",
    "created" : 1499812898502.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1937078819",
    "id" : "B2569584",
    "lastKnownWriteTime" : 1499812909,
    "last_content_update" : 1499812909351,
    "path" : "~/GitHub/cr17/package/R/fitAndTestCompRiskReg.R",
    "project_path" : "R/fitAndTestCompRiskReg.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}